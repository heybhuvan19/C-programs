#size or memory data type takes.
int = 4bytes(32 bits)
char= 1byte (8bits)
float = 4bytes(32bits)

# for using exponential function in c you don't use (^)tullu operator ðŸ˜‚ but instead you use a library  called <math.h> so the tullu operator isn't used for exponential operations .

#artithematic results or operations between.
a. between int and int the result is int for any operation.
b. between int and float the result is float for any operation.
c. between float and float the result is float for any operation.
d. if you store a float value in an int data type demotion takes places as only int data type is displayed and hence the float value or the decimal value is removed.

##operators precedence 
# while having a problem like 3*x-8*y, where parenthesis are absent, then no BODMAS rule is applied here instead, we use operator precedence. Which is a hirarchy of operators, with given value in ABSENSE OF PARENTHESIS.
Priority        Operator 
1st             /%*
2nd             +-
3rd             =

##operators associativity
# for an instance if, all the 1st priority operators are given in one problem then to choose which one operator would be executed first is determined by operators assoiciativity. By LEFT TO RIGHT ASSOCIATIVIY where the operators to be executed first is decided by while going left to right, the one that comes first is executed first. x*y/z (first * and then / will be executed)

#typecasting = This is the operation or way to convert the data type if value and data type are predefined. 
Syntax- int a = 31;
        n = (float) 31; hence the data type is converted.       
In c language while performing decision making statements, the condition can be any valid statement. A non-zero value is also considered true         
Syntax:
        if(1){
         printf("This will be executed");
        }//hence this will be executed unitl and unless the value inside the if is 0.
Types of operators :
Arithematic Operator = +,-,*,/
Logical Operator = &&{and},||(or),!(not)
(AND op returns when both the conditon are true. OR op return true even if one of the condition are true. NOT op returns the opposite value of the given value for ex: if given 0 will return 1 or if given true will return false.)
Relational Operator = ==,=>,=<,!=
Operator Precedence 2 :
Priority        Operator
1st             !
2nd             */%
3rd             +-
4th             <=,>=,<>,
5th             ==,!=
6th             &&
7th             ||
8th             =

Apart from if and else conditions we also have switch statement. Which requires an choice to consider cases.